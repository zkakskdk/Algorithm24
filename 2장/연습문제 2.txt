2. 위 문제의 알고리즘들에 대해 입력의 구성에 따른 처리시간(최선, 평균, 최악) 특성을 각각 설명하라.

(1)입력 리스트에서 가장 큰 항목을 찾는 알고리즘
최선: 최대값이 리스트의 처음에 있을 때 한 번의 순회로 최댓값을 찾을 수 있으므로 O(1)
평균: 입력 리스트의 항목들이 무작위로 분포되어 있을 때, 평균적으로는 입력 크기에 비례하여 O(n)
최악: 최대값이 리스트의 마지막에 있거나, 리스트가 역순으로 정렬되어 있는 경우에는 모든 항목을 순회해야 하므로 O(n)

(2)입력 리스트의 모든 숫자를 더하는 알고리즘
최선, 평균, 최악: 입력 리스트의 모든 항목을 한 번씩 순회하면서 더하는 과정이 필요하므로 입력 크기에 비례하여 O(n)

(3)n! 알고리즘
최선, 평균, 최악: n부터 1까지의 정수를 모두 곱하는 과정이 필요하므로 입력 크기 n에 비례하여 O(n)

(4)두 개의 n X n 행렬을 더하는 알고리즘
최선, 평균, 최악: 두 행렬의 같은 위치에 있는 원소들을 모두 더하는 과정이 필요하며, 이는 n^2개의 원소에 대해 덧셈 연산을 수행하는 것이므로 입력 크기 n^2에 비례하여 O(n^2)

(5)유클리드 알고리즘
최선, 평균, 최악: 입력된 두 정수 a와 b의 크기에 따라 시간 복잡도가 결정됩니다. 최악의 경우에는 입력된 두 정수의 비트 수에 비례하여 O(log(max(a, b)))

(6)최대 공약수 알고리즘
최선, 평균, 최악: 입력된 두 정수 a와 b의 크기에 따라 시간 복잡도가 결정됩니다. 최악의 경우에는 입력된 두 정수의 비트 수에 비례하여 O(log(max(a, b)))입니다.

(7)최대 공약수 알고리즘
최선, 평균, 최악: 입력된 두 정수 a와 b의 크기에 따라 시간 복잡도가 결정됩니다. 최악의 경우에는 입력된 두 정수의 비트 수에 비례하여 O(log(max(a, b)))입니다.