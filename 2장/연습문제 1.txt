1. 다음 알고리즘들에 대해 입력의 크기와 기본 연산을 설명해 보라.
(1) 입력 리스트에서 가장 큰 항목을 찾는 알고리즘
입력 크기: 리스트의 길이 (n)
기본 연산: 입력 리스트의 모든 항목을 비교하여 가장 큰 값을 찾는 과정
(2) 입력 리스트의 모든 숫자를 더하는 알고리즘
입력 크기: 리스트의 길이 (n)
기본 연산: 입력 리스트의 모든 항목을 더하는 과정
(3) n! 알고리즘
입력 크기: n (정수)
기본 연산: 곱셈 연산, 반복문 (주로 곱셈이 n번 반복됨)
(4) 두 개의 n X n 행렬을 더하는 알고리즘
입력 크기: 행렬의 크기 n (n X n 행렬이 두 개)
기본 연산: 두 행렬의 같은 위치에 있는 원소를 더하는 과정 (각 원소마다 덧셈 연산)
(5) 유클리드 알고리즘(알고리즘 1.7)
입력의 크기: 주어진 두 정수 a와 b의 크기
기본 연산
- a % b: a를 b로 나눈 나머지를 계산한다. 이 때 나머지 연산이 이루어지며, 큰 정수를 작은 정수로 나누는 연산이므로 계산에 시간이 소요된다.
변수 교환: a에는 이전에 b였던 값이, b에는 나머지가 저장된다.
나머지 연산을 통해 0이 나오면, 이 때의 a값이 최대공약수가 된다.
(6) 최대 공약수 알고리즘(알고리즘 1.5)
입력의 크기: 주어진 두 정수 a와 b의 크기
- 기본 연산
a % b: a를 b로 나눈 나머지를 계산한다. 이 때 나머지 연산이 이루어지며, 큰 정수를 작은 정수로 나누는 연산이므로 계산에 시간이 소요된다.
변수 교환: a에는 이전에 b였던 값이, b에는 나머지가 저장된다.
나머지 연산을 통해 0이 나오면, 이 때의 a값이 최대공약수가 된다.
(7) 최대 공약수 알고리즘(알고리즘 1.6)
입력의 크기: 주어진 두 정수 a와 b의 크기
- 기본 연산:
a % b: a를 b로 나눈 나머지를 계산한다. 이 때 나머지 연산이 이루어지며, 큰 정수를 작은 정수로 나누는 연산이므로 계산에 시간이 소요된다.
변수 교환: a에는 이전에 b였던 값이, b에는 나머지가 저장된다.
나머지 연산을 통해 0이 나오면, 이 때의 a값이 최대공약수가 된다.